{% extends 'base.html.twig' %}
{% trans_default_domain 'FOSUserBundle' %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('assets/css/screen.css') }}" type="text/css">
{% endblock %}
{% block body %}
    <div class="logo"></div>
    {% if is_granted('ROLE_ADMIN') %}
        <div class="admin"><a href="{{ path('admin') }}" style="margin-left: 85px">Administration</a></div>
    {% endif %}
    <div id="dropform" class="formulaire">
        <div class="glitch border-top"></div>
        <div class="glitch border-right"></div>
        <div class="glitch border-bottom"></div>
        <div class="glitch border-left"></div>

        <div class="container">
            <div class="back-head"></div>
            <div class="sub-container">
            {% if app.request.pathinfo == '/login' %}
            <div class="connexion">
            {% else %}
            <div class="connexion toleft">
            {% endif %}
                <h1>Connexion</h1>
                <div class="form-container">
                    <form action="{{ path("fos_user_security_check") }}" method="post">
                        <input type="text" id="username" name="_username" placeholder="pseudo" value="{{ last_username }}" required="required" />
                        <input type="password" id="password" name="_password" required="required" placeholder="mot de passe"/>
                        <div class="connexion-options">
                            <div class="input-check">
                                <label class="switch">
                                    <input type="checkbox" name="_remember_me" value="on"/>
                                    <span class="slider"></span>
                                </label>
                                Se souvenir de moi
                            </div>
                            <a href="{{ path('fos_user_resetting_request') }}">Mot de passe oubli√©</a>
                        </div>
                        <button type="submit" id="_submit" name="_submit" value="{{ 'security.login.submit'|trans }}">Jouer !</button>
                        <input type="hidden" name="_csrf_token" value="{{ csrf_token }}" />
                    </form>
                </div>
                <div class="foot" id="goright" style="cursor: pointer;">S'inscrire ?</div>
            </div>
            {% if app.request.pathinfo == '/login' %}
            <div class="inscription">
            {% else %}
            <div class="inscription toleft">
            {% endif %}
                <h1>Inscription</h1>
                <div class="form-container">
                    {{ render(controller('FOSUserBundle:Registration:register')) }}
                </div>
                <div class="foot" id="goleft" style="cursor: pointer;">Vous avez un compte ? Se connecter.</div>
            </div>
        </div>
        <div class="back-foot"></div>
        </div>
        </div>
        {% include 'default/footer.html.twig' %}
{% if error %}
    <div>{{ error.messageKey|trans(error.messageData, 'security') }}</div>
{% endif %}
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script defer type="text/javascript">
    $(document).ready(function() {
        $("#goright").click(function () {
            $(".inscription").addClass("toleft")
            $(".connexion").addClass("toleft")
            $("#fieldset").attr("disabled", false)
        })
        $("#goleft").click(function () {
            $(".inscription").removeClass("toleft")
            $(".connexion").removeClass("toleft")
            $("#fieldset").attr("disabled", true)
        })

        const neon = document.querySelector('.glitch')
        const neon5 = document.querySelector('#dropform')
        function setProperty(duration) {
            neon.style.setProperty('--animation-time', duration + 's')
            neon5.style.setProperty('--animation-time', duration + 's')
        }

        function changeAnimationTime() {
            const animationDuration = Math.random()
            setProperty(animationDuration)
        }

        var intervalFlicker = setInterval(changeAnimationTime, 500)

        // CHECKED
        if ($('#check_animation').prop('checked')) {
            console.log('checked');
            var intervalFlicker = setInterval(changeAnimationTime, 500);
            $("[class*='border-']").addClass('glitch');
            $(".dropform").attr("id", "dropform");
            $("body").css('background-image', 'url("{{ asset('assets/images/back.gif') }}")');
        } else {
            console.log('unckecked');
            clearInterval(intervalFlicker);
            $("[class*='border-']").removeClass('glitch');
            $(".dropform").removeAttr("id");
            $("body").css('background-image', 'url("{{ asset('assets/images/background.jpg') }}")');
        }

        $('#check_animation').on('click', function () {
            if ($(this).prop('checked')) {
                console.log('checked');
                var intervalFlicker = setInterval(changeAnimationTime, 500);
                $("[class*='border-']").addClass('glitch');
                $(".dropform").attr("id", "dropform");
                $("body").css('background-image', 'url("{{ asset('assets/images/back.gif') }}")');
                $.ajax({
                    url: '{{ path('cookie_animation', { 'checked':1 }) }}',
                    success: function() {
                        console.log('cookie !')
                    }
                })
            } else {
                console.log('unckecked');
                clearInterval(intervalFlicker);
                $("[class*='border-']").removeClass('glitch');
                $(".dropform").removeAttr("id");
                $("body").css('background-image', 'url("{{ asset('assets/images/background.jpg') }}")');
                $.ajax({
                    url: '{{ path('cookie_animation', { 'checked':0 }) }}',
                    success: function() {
                        console.log('cookie !')
                    }
                })
            }
    });
    </script>
    <script type="text/javascript">
        let mavue = new Vue({
            el: "#vuejs",
            data: {
                mdp1: "",
                mdp2: "",
                toleft: false,
                url: window.location.pathname,
            },
            computed:{
                mdpsame : function () {
                    return this.mdp1==this.mdp2 && this.mdp2
                },
                isLogin: function() {
                    let t = this.url.split("/")
                    let part = t[t.length-1]
                    console.log(part)
                    if(part == 'login') {
                        return true
                    }else {
                        return false
                    }
                },
            }
        });
    </script>
{% endblock %}
